# This is a cross-compiling version of arm32v7/debian:buster-slim
# It has a modified qemu, which doesn't need kernel support to execute armv32v7 on x64
FROM thijswithaar/raspbian:xbuild
RUN xbuild start

ARG DEBIAN_FRONTEND=noninteractive

# Install build-tools and development libraries
#RUN echo "deb http://ftp.debian.org/debian stretch-backports main" > /etc/apt/sources.list.d/backports.list
# use install -t stretch-backports to use the backports
RUN apt update -q
RUN apt upgrade -y
RUN apt install -y sudo wget build-essential git cmake ninja-build clang
RUN apt install -y libboost-all-dev qtbase5-dev qttools5-dev libflac-dev libopus-dev libsoxr-dev

WORKDIR /tmp

# Have clang-8 instead of clang-6
#RUN wget -qO- http://releases.llvm.org/8.0.0/clang+llvm-8.0.0-armv7a-linux-gnueabihf.tar.xz | tar xJ
#RUN cp -ar clang+llvm-8.0.0-armv7a-linux-gnueabihf/* /usr
#RUN rm -rf clang+llvm-8.0.0-armv7a-linux-gnueabihf

#RUN update-alternatives --install /usr/bin/cc cc /usr/bin/clang 100
#RUN update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++ 100

# Catch2 is not yet in the repo:
RUN git clone https://github.com/catchorg/Catch2.git catch2
RUN cmake -H./catch2 -B./catch2/build -DBUILD_TESTING=OFF -DCMAKE_INSTALL_PREFIX=/usr
RUN cmake --build ./catch2/build -- install
RUN rm -r catch2

# Add a non-root user:
RUN useradd docker && echo "docker:docker" | chpasswd
RUN mkdir -p /home/docker && chown -R docker:docker /home/docker

WORKDIR /home/docker

# the qemu-shenanigangs do need lots of rights, this still isn't enough:
# 	RUN chmod a+wx /usr/bin/xbuild /bin/sh /bin/dash /bin/sh.real /bin /usr/bin
# for now, drop out of cross-build, relying on kernel binfmt support to run this:
#RUN xbuild stop
